spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql = true
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.database.driverClassName=org.postgresql.Driver
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

server.port= 8081

spring.cloud.loadbalancer.ribbon.enabled = false
        
management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

eureka.instance.preferIpAddress = true
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone=http://eurekaserver:8070/eureka/

# keycloak
#keycloak.real=spmia-realm
#keycloak.auth-server-url=http://keycloak:8080/auth
#keycloak.ssl-required=external
#keycloak.resource=ostock
#keycloak.credentials.secret=xDYrFUOpRLqLvEztc1FwQFm2RAp1reFk
#keycloak.use-resource-role-mappings=true
#keycloak.bearer-only=true

# messaging kafka config
# Nomeia a fila ou tópico que escreve a mensagem
# spring.cloud.stream.bindings.output.destination=orgChangeTopic
# Define o formato da mensagem, nesse caso, JSON
# spring.cloud.stream.bindings.output.content-type=application/json
# Define as configurações de rede do zookeeper e kafka
# spring.cloud.stream.kafka.binder.zkNodes=localhost
# spring.cloud.stream.kafka.binder.brokers=localhost

zipkin.baseUrl=localhost:9411